name: Testing github action with test release

on:
  push:
    tags:
      - test-v*.*

jobs:
  build-odysseygo:
    name: Build Odysseygo binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/install-deps

      - uses: ./.github/actions/setup-go

      - name: Build Binary
        run: |
          ./scripts/build.sh
        shell: bash

      - name: Try to get tag from git
        if: "${{ github.event.inputs.tag == '' }}"
        id: get_tag_from_git
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> "$GITHUB_ENV"
        shell: bash

      - name: Try to get tag from workflow dispatch
        if: "${{ github.event.inputs.tag != '' }}"
        id: get_tag_from_workflow
        run: |
          echo "TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
        shell: bash

      - name: Archive binary in Targz
        run: |
          cd build
          tar -czvf ../odysseygo-linux-amd64-${{ env.TAG }}.tar.gz odysseygo
        shell: bash

      - name: Upload artifact with odysseygo
        uses: actions/upload-artifact@v4
        with:
          name: odysseygo-linux-amd64-${{ env.TAG }}
          path: odysseygo-linux-amd64-${{ env.TAG }}.tar.gz
          retention-days: 30

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./odysseygo-linux-amd64-${{ env.TAG }}.tar.gz
          asset_name: odysseygo-linux-amd64-${{ env.TAG }}.tar.gz
          asset_content_type: application/x-tar
